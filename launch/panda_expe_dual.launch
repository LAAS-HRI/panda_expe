<launch>
    
    <arg name="fake" default="false" />
    <arg name="use_octomap" default="false" />
    <arg name="load_gripper" default="true" />
    <arg name="dual" default="true" />


    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" output="screen"/>
    <node name="joint_state_publisher" type="joint_state_publisher" pkg="joint_state_publisher" output="screen">
        <param name="robot_description" command="$(find xacro)/xacro --inorder '$(find franka_description)/robots/dual_pandas.urdf.xacro'" />
        <rosparam command="load" param="source_list">[panda_1_state_controller/joint_states, panda_1/franka_gripper/joint_states, panda_2_state_controller/joint_states, panda_2/franka_gripper/joint_states] </rosparam>
        <param name="rate" value="30"/>
    </node>

    <!-- Launch realsense camera node -->
    <include file="$(find realsense2_camera)/launch/rs_camera.launch"/>

    <!-- Launch ar track alvar with the given tags-->
    <include file="$(find panda_expe)/launch/panda_perception.launch"/>

    <!-- Fix the table into the world-->
    <node pkg="tf2_ros" type="static_transform_publisher" name="world_to_table_link_publisher" args="2 2 -0.77 0 0 0 1 world table_link" />
    
    <!-- Fix the realsense camera according to panda_link0 which seats on the table-->
    <node pkg="tf2_ros" type="static_transform_publisher" name="realsense_to_panda_link_publisher" args="0.53 -0.61 0.13 0 0 0.707 0.707 panda_2_link0 realsense_link" />


    <!-- Launch ontologenius 
    <arg name="language" default="en"/>
    <arg name="intern_file" default="none"/>
    <arg name="files" default="
        $(find panda_expe)/ontologies/common_ground.owl
        $(find panda_expe)/ontologies/dt_objects.owl
        $(find panda_expe)/ontologies/dt_humans.owl
        $(find panda_expe)/ontologies/actions_emulation.owl
    "/>
    <node name="ontologenius_core" pkg="ontologenius" type="ontologenius_multi" output="screen" args="-l $(arg language) -i $(arg intern_file) $(arg files)"> </node>
    <node name="ontologenius_gui" pkg="ontologenius" type="ontoloGUI" output="screen"> </node>
    -->

    <!-- Launch overworld 
    <node name="overworld" pkg="overworld" type="overworld_node" output="log" respawn="false"/>
    -->

    <!-- Launch Moveit -->
    <include file="$(find panda_moveit_config)/launch/panda.launch">
        <arg name="load_gripper" value="$(arg load_gripper)" />
        <arg name="dual" value="$(arg dual)" />
    </include>

    <!-- Launch Rviz -->
    <include file="$(find panda_moveit_config)/launch/moveit_rviz.launch"/>

    <!-- Launch Motion Planning Node 
    <param name="/panda_tasks_node/planner_config" type="string" value="RRTConnect" />
    <node name="panda_tasks_node" pkg="panda_mtc" type="panda_tasks" output="screen" respawn="false"/>
    -->

</launch>
